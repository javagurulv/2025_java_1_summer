Давайте на практике покажем преимущества принципа SRP в действии.

Предположим от бизнеса поступило требование реализовать новое правило:

- Rule 6: всех трейдеров имя которых начинается на "LOL-" из страны "Japan" признавать мошенниками,
все их транзакции должны быть отклонены.

Где в коде мы будем делать изменения?

Вы создадите новый класс FraudRule6, в нем реализуете требуемое правило.
Напишите тесты на новый класс.
Подключите новое правило в класс FraudDetector.

Принцип SRP в действии! Для добавления нового правила мы не трогаем уже реализованные классы с правилами.
Тем самым ограничиваем возможность внесения ошибки в код программы.

Применение принципа SRP позволяет сконцентрироваться только на добавлении новых изменений
и не трогать уже написанный код (за исключением класса FraudDetector в который придется
добавить новое правило).

Внесите требуемые бизнесом изменения!
Не забудьте протестировать ваши изменения, добавьте автоматические тесты.

#### Поддержка, вопросы и обратная связь по проекту
* [Телеграмм группа проекта](https://t.me/+mvRhG9YECTlkZjQ0)
* [Телеграмм автора курса] (@javagurulv)
* [Емейл автора курса] (itguruby@mail.ru)
